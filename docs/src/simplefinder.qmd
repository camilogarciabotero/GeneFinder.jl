---
engine: knitr
cache: refresh
code-line-numbers: true
code-annotations: select
---
```{julia}
#| include: false
#| label: installation
using Pkg
Pkg.activate("../../")
```
# A simple algorithm

The first implemented function is `simplefinder` a very non-restrictive ORF finder function that will catch all ORFs in a dedicated structure. Note that this will catch random ORFs not necesarily genes since it has no ORFs size or overlapping condition contraints. Thus it might consider `aa"M*"` a posible encoding protein from the resulting ORFs.

```{julia}
#| label: init
using BioSequences, GeneFinder

# > 180195.SAMN03785337.LFLS01000089 -> finds only 1 gene in Prodigal (from Pyrodigal tests)
seq = dna"AACCAGGGCAATATCAGTACCGCGGGCAATGCAACCCTGACTGCCGGCGGTAACCTGAACAGCACTGGCAATCTGACTGTGGGCGGTGTTACCAACGGCACTGCTACTACTGGCAACATCGCACTGACCGGTAACAATGCGCTGAGCGGTCCGGTCAATCTGAATGCGTCGAATGGCACGGTGACCTTGAACACGACCGGCAATACCACGCTCGGTAACGTGACGGCACAAGGCAATGTGACGACCAATGTGTCCAACGGCAGTCTGACGGTTACCGGCAATACGACAGGTGCCAACACCAACCTCAGTGCCAGCGGCAACCTGACCGTGGGTAACCAGGGCAATATCAGTACCGCAGGCAATGCAACCCTGACGGCCGGCGACAACCTGACGAGCACTGGCAATCTGACTGTGGGCGGCGTCACCAACGGCACGGCCACCACCGGCAACATCGCGCTGACCGGTAACAATGCACTGGCTGGTCCTGTCAATCTGAACGCGCCGAACGGCACCGTGACCCTGAACACAACCGGCAATACCACGCTGGGTAATGTCACCGCACAAGGCAATGTGACGACTAATGTGTCCAACGGCAGCCTGACAGTCGCTGGCAATACCACAGGTGCCAACACCAACCTGAGTGCCAGCGGCAATCTGACCGTGGGCAACCAGGGCAATATCAGTACCGCGGGCAATGCAACCCTGACTGCCGGCGGTAACCTGAGC"
```

## Finding all ORFs
```{julia}
#| eval: true
simplefind(seq)
```

Two other functions (`cdsgenerator` and `proteingenerator`) pass the sequence to `simplefinder` take the ORFs and act as generators of the sequence, so this way the can be `collect`ed in the REPL as an standard output or `write`en into a file more conviniently using the `FASTX` IO system:

## Generting the cds and proteins associated with ORFs

```{julia}
cds = simplecds_generator(seq)
collect(cds) # <1>
```

1. We actually need to collect the `Generator` to see the CDSs in the stdout. Other way to to is simply by array comprenhension `[for cds in cdsgenerator(seq)]`

```{julia}
protein = simpleprot_generator(seq)
collect(protein)
```

## Combining `FASTX` to read a fasta record

```{julia}
#|eval: false
using FASTX

filename = "../../test/data/KK037166.fna"
rdr = FASTA.Reader(open(filename))
record = first(rdr)
seq = sequence(record)
dnaseq = LongDNA{4}(seq)
```


```{julia}
collect(simpleprot_generator(dnaseq))
```
